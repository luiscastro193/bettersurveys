let t=0;function e(){return t=(t+1)%Number.MAX_SAFE_INTEGER}function a(t){let e=document.createElement("template");return e.innerHTML=t.trim(),e.content.firstChild}class n{constructor(){this.event=new EventTarget,this.aux=new Event("e")}addListener(t,e){let a=this.event;t.myCallbacks?t.myCallbacks.push(e):t.myCallbacks=[e];let n=[new WeakRef(t),new WeakRef(e)];a.addEventListener("e",(function t(){let[e,i]=n.map((t=>t.deref()));e&&i&&(document.contains(e)?i():a.removeEventListener("e",t))}))}addGlobalListener(t){this.event.addEventListener("e",t)}dispatch(){this.event.dispatchEvent(this.aux)}}class i{constructor(t){this.variable=t,this.event=new n}get value(){return this.variable}set value(t){this.variable=t,this.event.dispatch()}subscribe(t,e){this.event.addListener(t,e)}addGlobalListener(t){this.event.addGlobalListener(t)}}const s=new Worker("assets/webworker.js",{type:"module"}),l=new Map;async function o(){new Promise((t=>setTimeout(t)))}async function r(t,a,n){a&&await async function(){return new Promise((async t=>{await o(),l.size?s.addEventListener("message",(async function e(){await o(),l.size||(s.removeEventListener("message",e),t())})):t()}))}();const i=e();return new Promise(((e,a)=>{l.set(i,{onSuccess:e,onError:a}),s.postMessage({python:t,id:i,...n})}))}async function c(t,e){return r(`\n\t\timport micropip\n\t\tmicropip.install(${JSON.stringify(t)})\n\t`,e)}function d(t){return`await (await pyfetch("${t}")).memoryview()`}s.onmessage=function(t){const{id:e,...a}=t.data,{onSuccess:n,onError:i}=l.get(e);l.delete(e),Object.hasOwn(a,"error")?i(a.error):n(a.result)};const u=(async()=>{await async function(t,e,a){return r(`\n\t\tfrom pyodide.http import pyfetch\n\t\twith open("${e}", "wb") as my_file:\n\t\t\tmy_file.write(${d(t)})\n\t`,a)}(`${function(){let t=location.pathname;return t.endsWith("/")?t:t+"/"}()}assets/utils.py`,"utils.py"),await r("import utils")})(),p=c("openpyxl");async function h(t,e){let a=URL.createObjectURL(t);await async function(t,e){await p,await r(`\n\t\tfrom pyodide.http import pyfetch\n\t\tfrom io import BytesIO\n\t\timport pandas as pd\n\t\t${e} = pd.read_excel(BytesIO(${d(t)}), engine = "openpyxl")\n\t`)}(a,e),URL.revokeObjectURL(a)}async function m(t,e){await p,await u,function(t,e){let a=document.createElement("a");a.href=t,a.download=e,document.body.append(a),a.click(),URL.revokeObjectURL(t),a.remove()}(await r(`utils.to_excel(${t})`),`${e}.xlsx`)}async function w(t){return r(`del ${t}`)}async function v(t){return r(`${t}.columns.tolist()`)}async function b(t){return await u,r(`utils.num_vars(${t})`)}function f(t,e){return t&&t!=e?`, "${t}"`:""}async function g(t,e,a){return await u,r(`utils.harmonized_variables(${t}, ${e}${f(a)})`)}async function y(t,e,a,n){return await u,r(`utils.${e?"numeric":"categories"}_details("${t}", ${a}${f(n,t)})`)}p.then((()=>r("import openpyxl")));const $=new i("load"),S={value:!1},E=new i,L=new i;let k;class T{constructor(t){this.targetName=t,this.event=new n}subscribe(t,e){this.event.addListener(t,e)}cancel(t){if(this[t]){let e=this[t].id;this[t].loadPromise.then((()=>w(e))),this[t]=null,this.event.dispatch()}}loadTemp(t){this.cancel("temp");let a={id:`temp${e()}`,filename:t.name};return a.loadPromise=async function(t,e){return h(t,e)}(t,a.id),this.temp=a,this.event.dispatch(),a.loadPromise.then((()=>{a.id==this.temp?.id&&(a.loaded=!0,this.event.dispatch())})).catch((t=>{if(a.id==this.temp?.id)throw console.error(t),this.temp=null,this.event.dispatch(),t}))}confirmTemp(){this.cancel("final"),this.final=this.temp,this.temp=null,this.event.dispatch()}confirmFinal(){let t=this.final;return this.final=null,this.event.dispatch(),async function(t,e){return r(`\n\t\t${e} = ${t}\n\t\tdel ${t}\n\t`)}(t.id,this.targetName).then((()=>{let e=function(t){return t.replace(/\.[^.]+$/,"")}(t.filename);if("np_sample"==this.targetName)E.value=e;else{if("p_sample"!=this.targetName)throw Error(`Invalid name: ${this.targetName}`);k=t.weights,L.value=e}}))}}const x=new T("np_sample"),N=new T("p_sample");for(let t of[x,N])$.addGlobalListener((()=>t.cancel("final")));let q;L.addGlobalListener((()=>{q=L.value&&async function(t,e){return await u,await r(`utils.pop_total(${t}${f(e)})`)}("p_sample",k)}));const _=async function(t,e){let a=await fetch(t,e);if(a.ok)return a;throw a}("assets/texts.json").then((t=>t.json()));async function P(t){return _.then((e=>e[t]))}function z(t){let e=!1;return()=>{e||(e=!0,setTimeout((()=>{e=!1,t()})))}}function D(t){for(let e of t.querySelectorAll("dialog"))e.querySelector(".close-button").onclick=()=>e.close()}async function M(t){let e=a(`<dialog class="modal error">\n\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t\t<img src="images/error.svg">\n\t\t<article>\n\t\t\t<h4>${await P("error")}</h4>\n\t\t\t<p>${t}</p>\n\t\t</article>\n\t\t<button class="button" autofocus>${await P("acceptError")}</button>\n\t</dialog>`);e.querySelectorAll("button").forEach((t=>t.addEventListener("click",(()=>e.close())))),e.addEventListener("close",(()=>e.remove())),document.body.append(e),e.showModal()}async function F(t){let e=a(`<dialog class="modal loading">\n\t\t<img src="images/loading.svg"/>\n\t\t<p>${await P("loading")}</p>\n\t\t<p>${t}</p>\n\t</dialog>`);return e.addEventListener("cancel",(t=>t.preventDefault())),e.addEventListener("close",(()=>e.showModal())),e}function W(t,e){let n=a(`<article class="feedback">\n\t\t<img src="images/check-circle.svg"/>\n\t\t<div>\n\t\t\t<h3>${t}</h3>\n\t\t\t<p>${e}</p>\n\t\t</div>\n\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t</article>`);return n.querySelector(".close-button").addEventListener("click",(()=>n.remove())),n}const A=[x,N];function H(t,e){let n;n=t[e]?`<article class="uploaded-file">\n\t\t\t<span>${t[e].filename}</span>\n\t\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t\t\t<progress ${t[e].loaded?'value = "1"':""}></progress>\n\t\t</article>`:'<article class="uploaded-file" hidden></article>';let i=a(n);return i.querySelector(".close-button")?.addEventListener("click",(()=>t.cancel(e))),t.subscribe(i,(()=>i.replaceWith(H(t,e)))),i}async function O(t){let e=a(`<section class="modal-input">\n\t\t<div class="modal-input-top">\n\t\t\t<h4>${await P("loadFile2Subaction")}</h4>\n\t\t\t<span class="lead"><img src="images/lead.svg"/><span class="tooltip">${await P("loadFile2SubactionHelp")}</span></span>\n\t\t</div>\n\t\t<select></select>\n\t\t<p>${await P("loadFile2SubactionSubtitle")}</p>\n\t</section>`);async function n(t){let n=await async function(t){let e=a(`<select name="weights-var">\n\t\t<option value="">${await P("noWeights")}</option>\n\t</select>`);return t?e.append(...t.map((t=>a(`<option>${t}</option>`)))):e.disabled=!0,e}(t);return e.querySelector("select").replaceWith(n),n}return n(),t.subscribe(e,(async()=>{let e=t.temp;if(e?.loaded){let a=await b(e.id);if(e.id==t.temp?.id){let t=await n(a);t.addEventListener("change",(()=>e.weights=t.value))}}else n()})),e}async function C(t){let e=a(`<dialog class="modal">\n\t\t<div class="modal-top">\n\t\t\t<header>\n\t\t\t\t<h3>${await P("loadFile"+t+"Title")}</h3>\n\t\t\t\t<p>${await P("loadFile"+t+"Subtitle")}</p>\n\t\t\t</header>\n\t\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t\t</div>\n\t\t<section class="modal-input padded">\n\t\t\t<div class="modal-input-top">\n\t\t\t\t<h4>${await P("loadFile"+t+"Action")}</h4>\n\t\t\t\t<span class="lead"><img src="images/lead.svg"/><span class="tooltip">${await P("loadFile"+t+"ActionHelp")}</span></span>\n\t\t\t</div>\n\t\t\t<label class="button reversed">\n\t\t\t\t<span class="large icon"><img src="images/upload.svg" data-inline/></span>\n\t\t\t\t<span>${await P("fileButton")}</span>\n\t\t\t\t<input name="file${t}" type="file" accept=".xlsx,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" autofocus/>\n\t\t\t</label>\n\t\t\t<p>${await P("fileButtonSubtitle")}</p>\n\t\t</section>\n\t\t<article class="uploaded-file" hidden></article>\n\t\t<section class="buttons-row">\n\t\t\t<button class="button reversed minimal">${await P("cancel")}</button>\n\t\t\t<button class="button" disabled>${await P("fileButton")}</button>\n\t\t</section>\n\t</dialog>`);const n=A[t-1];e.querySelector(".button.reversed.minimal").addEventListener("click",(()=>e.close()));const i=e.querySelector("input[type=file]");i.addEventListener("change",(()=>{n.loadTemp(i.files[0]).catch((async t=>M(await P("loadFileError"))))})),i.addEventListener("click",(()=>i.value="")),e.querySelector(".uploaded-file").replaceWith(H(n,"temp"));const s=e.querySelector(".buttons-row > .button:last-of-type");return n.subscribe(s,(()=>s.disabled=!n.temp?.loaded)),s.addEventListener("click",(()=>{n.confirmTemp(),e.close()})),2==t&&e.querySelector(".uploaded-file").after(await O(n)),e.addEventListener("close",(()=>n.cancel("temp"))),e}async function R(t){let e=a(`<label class="radio-label">\n\t\t<input type="radio" name="load-type">\n\t\t<h3>${await P(`loadOption${t}`)}</h3>\n\t\t<p>${await P(`loadOption${t}Subtitle`)}</p>\n\t\t<article class="radio-file">\n\t\t\t<img src="images/empty.svg"/>\n\t\t\t<p>${await P("fileSelect")}</p>\n\t\t\t<article class="uploaded-file" hidden></article>\n\t\t\t<button class="button small"><span class="icon"><img src="images/upload.svg" data-inline/></span><span>${await P("fileButton")}</span></button>\n\t\t</article>\n\t</label>`);const n=A[t-1];e.querySelector(".radio-file").append(await C(t)),e.querySelector(".uploaded-file").replaceWith(H(n,"final"));let s=e.querySelector(".button:has(+ dialog)");s.addEventListener("click",(()=>s.nextElementSibling.showModal()));const l=new i(n.final?.loaded);return n.subscribe(e,(()=>l.value=n.final?.loaded)),l.subscribe(s,(()=>s.disabled=l.value)),[e,l,()=>n.confirmFinal()]}async function j(t){let e=a(`<dialog class="modal">\n\t\t<div class="modal-top">\n\t\t\t<header>\n\t\t\t\t<h3>${await P(`download${t}Title`)}</h3>\n\t\t\t\t<p>${await P(`download${t}Subtitle`)}</p>\n\t\t\t</header>\n\t\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t\t</div>\n\t\t<section class="modal-input">\n\t\t\t<div class="modal-input-top">\n\t\t\t\t<h4>${await P("downloadFilename")}</h4>\n\t\t\t</div>\n\t\t\t<input name="filename" type="text" autofocus/>\n\t\t</section>\n\t\t<section class="modal-input">\n\t\t\t<div class="modal-input-top">\n\t\t\t\t<h4>${await P("downloadFormat")}</h4>\n\t\t\t</div>\n\t\t\t<select name="format" class="big">\n\t\t\t\t<option value="" hidden>${await P("downloadFormatPlaceholder")}</option>\n\t\t\t\t<option>Excel</option>\n\t\t\t</select>\n\t\t</section>\n\t\t<section class="buttons-row">\n\t\t\t<button class="button reversed minimal">${await P("cancel")}</button>\n\t\t\t<button class="button" disabled>${await P("downloadConfirm")}</button>\n\t\t</section>\n\t</dialog>`);const n=e.querySelector("input"),i=e.querySelector("select"),[s,l]=e.querySelectorAll(".button");function o(){l.disabled=!(n.value&&i.value)}return n.addEventListener("input",o),i.addEventListener("change",o),s.addEventListener("click",(()=>e.close())),l.addEventListener("click",(async()=>{let a=await F(await P("downloadLoading"));e.append(a),a.showModal(),async function(t,e,a){if("Excel"==a)return m(t,e);throw Error(`Invalid extension: ${a}`)}(1==t?"np_sample":"p_sample",n.value,i.value).then((()=>{e.close()})).catch((async t=>{console.error(t),M(await P("downloadError"))})).finally((()=>a.remove()))})),o(),e}async function G(t){if("left"==t||"right"==t){let e="left"==t?1:2,n=await P(`loadFile${e}Title`),i="left"==t?E.value:L.value,s=a(`<header class="dual-header ${t}">\n\t\t\t<h2>${n}</h2>\n\t\t\t<label>\n\t\t\t\t<span>${await P("actions")}</span>\n\t\t\t\t<span class="icon"><img src="images/arrow-down.svg" data-inline/></span>\n\t\t\t\t<input type="checkbox" hidden/>\n\t\t\t\t<nav class="dropdown from-button">\n\t\t\t\t\t<a>${await P("loadNewData")}</a>\n\t\t\t\t\t<a>${await P("downloadData")}</a>\n\t\t\t\t</nav>\n\t\t\t</label>\n\t\t\t<p>${i}</p>\n\t\t\t<div class="border"></div>\n\t\t</header>`);"right"==t&&s.append(a(`<article>\n\t\t\t\t<span>${await P("weightsVar")}</span>\n\t\t\t\t<span>${k||await P("noWeights")}</span>\n\t\t\t</article>`));let l=s.querySelectorAll("nav > a"),o=await Promise.all([C(e),j(e)]),r=A[e-1];r.subscribe(s,(async()=>{if(r.final){let t=await F(await P("loadFileLoading"));s.append(t),t.showModal(),r.confirmFinal()}}));for(let t=0;t<o.length;t++)s.append(o[t]),l[t].addEventListener("click",(()=>o[t].showModal()));return s}if("single"==t)return a(`<header class="single-header"><h2>${await P("loadFile1Title")}</h2><p>${E.value}</p></header>`);throw Error(`Invalid type: ${t}`)}const I=["load","data","weight"];async function V(t,e,n){let i=a(`<a>${await P("export"+n)}</a>`),s=await j(n);t.append(i),e.append(s),i.addEventListener("click",(()=>s.showModal()))}async function B(){let t=a(`<main class="main-section">\n\t\t<nav class="breadcrumb">\n\t\t\t<a><img src="images/home.svg" data-inline/><span>${await P("home")}</span></a>\n\t\t\t<img src="images/arrow-right.svg" data-inline/>\n\t\t\t<a>${await P("projectsTab")}</a>\n\t\t\t<img src="images/arrow-right.svg" data-inline/>\n\t\t\t<a>${await P("defaultProject")}</a>\n\t\t</nav>\n\t\t<section class="main-title">\n\t\t\t<article class="main-title-text">\n\t\t\t\t<h1>${await P("defaultProject")}</h1>\n\t\t\t\t<p>${await P("defaultProjectDesc")}</p>\n\t\t\t</article>\n\t\t</section>\n\t\t<nav class="tabs"></nav>\n\t\t<main></main>\n\t</main>`);return t.querySelector(".tabs").replaceWith(await async function(t,e){let n=a('<nav class="tabs"></nav>');n.append(...await Promise.all(I.map((async t=>a(`<button>${await P(t+"Tab")}</button>`))))),t=I.indexOf(t),n.children[t].classList.add("active");for(let a=0;a<n.children.length;a++){let i=n.children[a];i.addEventListener("click",(()=>$.value=I[a])),e||a==t||(i.disabled=!0)}return n}($.value,E.value)),E.value&&t.querySelector(".main-title").append(await async function(){let t=a(`<article class="main-title-buttons">\n\t\t<label class="dropdown-button">\n\t\t\t<span>${await P("download")}</span>\n\t\t\t<span class="icon"><img src="images/arrow-down.svg" data-inline/></span>\n\t\t\t<input type="checkbox" hidden/>\n\t\t\t<nav class="dropdown from-button color"></nav>\n\t\t</label>\n\t</article>`);const e=t.querySelector(".dropdown");return E.value&&await V(e,t,1),L.value&&await V(e,t,2),D(t),t}()),t}const U=new Array(2);async function J(t){return 1==t?`<button class="button" disabled>${await P("next")}</button>`:`<section class="buttons-row">\n\t\t\t<button class="button reversed minimal">${await P("back")}</button>\n\t\t\t<button class="button" disabled>${await P("loadFileConfirm")}</button>\n\t\t</section>`}async function X(t=1){let e=a(`<main class="main-content">\n\t\t<header>\n\t\t\t<h2>${await P("loadTitle")}</h2>\n\t\t\t<p>${await P("loadSubtitle")}</p>\n\t\t</header>\n\t\t<main class="data-load-content">\n\t\t\t<article class="stepper">\n\t\t\t\t<span class="step-icon active">${1==t?1:'<img src="images/check.svg"/>'}</span>\n\t\t\t\t<span class="step-text active">${await P("loadStep1")}</span>\n\t\t\t\t<img src="images/stepper.svg"/>\n\t\t\t\t<span class="step-icon ${2==t?"active":""}">2</span>\n\t\t\t\t<span class="step-text ${2==t?"active":""}">${await P("loadStep2")}</span>\n\t\t\t</article>\n\t\t\t${await J(t)}\n\t\t\t<label class="radio-label"></label>\n\t\t\t${await J(t)}\n\t\t</main>`),n=e.querySelectorAll(".data-load-content > .button, .data-load-content > .buttons-row > .button:last-of-type"),s=e.querySelector(".radio-label"),l=[R(t)];2==t&&l.push(async function(t){let e=a(`<label class="radio-label">\n\t\t<input type="radio" name="load-type">\n\t\t<h3>${await P("noFileTitle")}</h3>\n\t\t<p>${await P("noFileSubtitle")}</p>\n\t\t<article class="radio-file">\n\t\t\t<img src="images/data.svg"/>\n\t\t\t<p>${await P("noFileSubSubtitle")}</p>\n\t\t\t<button class="button small adjusted"><span>${await P("noFileConfirm")}</span><span class="icon"><img src="images/arrow-right.svg" data-inline/></span></button>\n\t\t</article>\n\t</label>`),n=e.querySelector("button");return n.addEventListener("click",(()=>{n.disabled=!0,t.click()})),[e,new i(!0),async()=>{L.value&&(await w("p_sample"),L.value=null)}]}(n[0])),l=await Promise.all(l),s.after(...l.map((t=>t[0])));for(let[o,r,c]of l){let d=o.querySelector("input");for(let u of n){function p(){d.checked&&(u.disabled=!r.value,U[t-1]=c)}d.addEventListener("change",p),r.subscribe(u,p)}}for(let h of n)h.addEventListener("click",(async()=>{if(h.disabled=!0,t<2)e.replaceWith(await X(t+1));else{let t=await F(await P("loadFileLoading"));e.append(t),t.showModal(),await Promise.all(U.map((t=>t()))),S.value=!0,$.value="data"}}));return e.querySelectorAll(".data-load-content > .buttons-row > .button:first-of-type").forEach((a=>{a.addEventListener("click",(async()=>{a.disabled=!0,e.replaceWith(await X(t-1))}))})),s.remove(),D(e),e}let K=new class{constructor(){this.cache=new Map}set(t,e){this.cache.set(e.name,t),e.hasTotals.value=!0}delete(t){this.cache.delete(t.name),t.hasTotals.value=!1}async verify(t,e){let a=await e.npDetails();return!a.some((t=>null==t[0]))&&(e.isNpNumeric?"number"==typeof t:a.length==t.size&&a.every((e=>t.has(e[0]))))}async refresh(t){let e=this.cache;this.cache=new Map;for(let a of t){let t=e.get(a.name);t&&await this.verify(t,a)&&this.set(t,a)}}},Q=new class{constructor(){this.cache=new Set}refresh(t){let e=this.cache;this.cache=new Set;for(let a of t)a.selected.addGlobalListener((()=>{a.selected.value?this.cache.add(a.name):this.cache.delete(a.name)})),a.selected.value=a.selectable.value&&e.has(a.name)}};class Y{static baseProperties=["name","inNp","inP","isNpNumeric","isPNumeric","isHarmonized","harmonReason","pWeights"];constructor(t){for(let e of Y.baseProperties)this[e]=t[e];this.selected=new i(!1),this.expanded=new i(!1),this.hasTotals=new i(!1),this.selectable=new i(this.isHarmonized),this.hasTotals.addGlobalListener((()=>this.selectable.value=this.isHarmonized||this.hasTotals.value)),this.selectable.addGlobalListener((()=>{this.selected.value&&!this.selectable.value&&(this.selected.value=!1)}))}async npDetails(){return this.npCache||(this.npCache=y(this.name,this.isNpNumeric,"np_sample")),this.npCache}async pDetails(){return this.pCache||(this.pCache=y(this.name,this.isPNumeric,"p_sample",k)),this.pCache}async inferredTotals(){return this.inferredCache||(this.inferredCache=async function(t,e,a,n){await u;let i=await r(`utils.${e?"numeric":"categories"}_inferred_totals("${t}", ${a}${f(n)})`);return e?i:new Map(i)}(this.name,this.isPNumeric,"p_sample",k)),this.inferredCache}getTotals(){return K.cache.get(this.name)}setTotals(t){K.set(t,this)}deleteTotals(){K.delete(this)}}class Z{constructor(){this.event=new n}subscribe(t,e){this.event.addListener(t,e)}async variables(){return this.cache||(this.cache=this.variablesPromise().then((async t=>(await K.refresh(t),Q.refresh(t),t)))),this.cache}async filtered(t){return(await this.variables()).filter(t)}async harmonized(){return this.filtered((t=>t.isHarmonized))}async common(){return this.filtered((t=>t.inNp&&t.inP))}async npOnly(){return this.filtered((t=>t.inNp&&!t.inP))}async pOnly(){return this.filtered((t=>!t.inNp&&t.inP))}static async fromHarmonization(){let t=k,[e,a,n]=await Promise.all([g("np_sample","p_sample",t),b("np_sample"),b("p_sample")]);[a,n]=[a,n].map((t=>new Set(t)));let i=[];function s(e){return new Y({pWeights:t,isNpNumeric:a.has(e.name),isPNumeric:n.has(e.name),...e})}i.push(...e.harmonized.map((t=>s({name:t,inNp:!0,inP:!0,isHarmonized:!0})))),i.push(...e.nonharmonized.map((t=>s({name:t.name,inNp:!0,inP:!0,isHarmonized:!1,harmonReason:t.reason}))));for(let t=0;t<2;t++)i.push(...e.unrelated[t].map((e=>s({name:e,inNp:0==t,inP:1==t,isHarmonized:!1}))));return i}static async fromData(){let[t,e]=[v("np_sample"),b("np_sample")];return e=new Set(await e),(await t).map((t=>new Y({name:t,inNp:!0,inP:!1,isNpNumeric:e.has(t)})))}refresh(){E.value?L.value?(this.areDual=!0,this.variablesPromise=Z.fromHarmonization):(this.areDual=!1,this.variablesPromise=Z.fromData):(this.areDual=null,this.variablesPromise=null),this.cache=null,this.event.dispatch()}}const tt=new Z;E.addGlobalListener((()=>tt.refresh())),L.addGlobalListener((()=>tt.refresh())),tt.refresh();const et={maximumFractionDigits:2,minimumFractionDigits:2,maximumSignificantDigits:1,minimumSignificantDigits:1,roundingPriority:"morePrecision"},at=Intl.NumberFormat(void 0,et);et.style="percent";const nt=Intl.NumberFormat(void 0,et);async function it(t){return[await P("missing"),nt.format(t[1])]}async function st(t){return null==t[0]?it(t):[await P(t[0]),at.format(t[1])]}async function lt(t){return null==t[0]?it(t):[t[0],nt.format(t[1])]}function ot(t,e,n,i){if(!t.hasDetails&&e.checked){t.hasDetails=!0;let e="right"==i?n.pDetails():n.npDetails(),s="right"==i?n.isPNumeric:n.isNpNumeric,l=a('<section class="details"></section>');e.then((async e=>{e=await async function(t,e){let a=e?st:lt;return Promise.all(t.map(a))}(e,s),l.append(...e.map((t=>a(`<article><span>${t[0]}</span><span>${t[1]}</span></article>`)))),t.append(l)}))}}function rt(t,e,n){let i=[a(`<span>${t}</span>`),a('<label><input type="number" step="any" required/></label>')],s=i[1].querySelector("input");return e&&(s.valueAsNumber=e),n&&(s.readOnly=!0),i}async function ct(t){let e=a(`<dialog class="modal">\n\t\t<div class="modal-top">\n\t\t\t<header>\n\t\t\t\t<h3>${await P("editTotals")}</h3>\n\t\t\t\t<p>${await P("editTotalsSubtitle")}</p>\n\t\t\t</header>\n\t\t\t<button class="close-button"><img src="images/close.svg" data-inline/></button>\n\t\t</div>\n\t\t<section class="totals-container"></section>\n\t\t<section class="buttons-row">\n\t\t\t<button class="button reversed minimal" disabled>${await P("deleteTotals")}</button>\n\t\t\t<section>\n\t\t\t\t<button class="button reversed minimal">${await P("cancel")}</button>\n\t\t\t\t<button class="button" disabled>${await P("setTotals")}</button>\n\t\t\t</section>\n\t\t</section>\n\t</dialog>`);const[n,i,s]=e.querySelectorAll(".button");return e.addEventListener("open",(async()=>{(await t.npDetails()).some((t=>null==t[0]))?(M(await P("missingError")),e.close()):(e.querySelector(".totals-container").replaceWith(await async function(t){const e=await t.npDetails();let n=a(`<section class="totals-container${t.isHarmonized?"":" single"}" style="--items: ${t.isNpNumeric?1:e.length}">\n\t\t<article class="totals-article">\n\t\t\t<h4>${await P("totals1")}</h4>\n\t\t\t<h5>${t.name}</h5>\n\t\t\t<section class="totals-items"></section>\n\t\t</article>\n\t</section>`),i=n.querySelector(".totals-items"),s=t.getTotals();if(t.isNpNumeric)i.append(...rt(await P("total"),s));else for(let[t]of e)i.append(...rt(t,s?.get(t)));if(t.isHarmonized){let s=a(`<article class="totals-article">\n\t\t\t<h4>${await P("totals2")}</h4>\n\t\t\t<h5>${t.name}</h5>\n\t\t\t<section class="totals-items"></section>\n\t\t</article>`);n.append(s),s=s.querySelector(".totals-items");const l=await t.inferredTotals();if(t.isPNumeric)s.append(...rt(await P("total"),l,!0));else for(let[t,e]of l)s.append(...rt(t,e,!0));let o=a(`<button class="button reversed">${await P("inferTotals")}</button>`);o.addEventListener("click",(()=>function(t,e,a,n){const i=t.querySelectorAll("input");if(n)i[0].valueAsNumber=a;else for(let t=0;t<e.length;t++)i[t].valueAsNumber=a.get(e[t][0])}(i,e,l,t.isPNumeric))),n.querySelector(".totals-article").append(o)}return n}(t)),s.disabled=!1,n.disabled=!1)})),i.addEventListener("click",(()=>e.close())),s.addEventListener("click",(()=>async function(t,e,a){const n=[...t.querySelectorAll("input")];if(n.every((t=>!t.value)))e.deleteTotals(),a.close();else if(n.every((t=>t.reportValidity()))){if(e.isNpNumeric)e.setTotals(n[0].valueAsNumber);else{const t=await e.npDetails();e.setTotals(new Map(t.map(((t,e)=>[t[0],n[e].valueAsNumber]))))}a.close()}}(e.querySelector(".totals-items"),t,e))),n.addEventListener("click",(()=>{e.querySelector(".totals-items").querySelectorAll("input").forEach((t=>t.value=""))})),e}async function dt(t){let e=await async function(t){let e=a('<button class="button reversed"></button>');async function n(){e.innerHTML=t.hasTotals.value?await P("editTotals"):await P("insertTotals")}return t.hasTotals.subscribe(e,n),n(),e}(t),n=await ct(t);return e.addEventListener("click",(()=>{n.showModal(),n.dispatchEvent(new Event("open"))})),[e,n]}async function ut(t){let e=a(`<header class="variable header">\n\t\t<label class="expand-arrow icon">\n\t\t\t<input type="checkbox" hidden/>\n\t\t\t<img src="images/arrow-right.svg" data-inline/>\n\t\t\t<img src="images/arrow-down.svg" data-inline/>\n\t\t</label>\n\t\t<div class="border"></div>\n\t\t<span>${await P("variables")}</span>\n\t</header>`);"single"!=t&&e.classList.add(t),"right"!=t&&e.querySelector(".border").after(a('<label class="checkbox icon">\n\t\t\t<input type="checkbox" hidden/>\n\t\t\t<img src="images/check.svg"/>\n\t\t</label>'));let n=await tt.filtered((e=>e["right"==t?"inP":"inNp"])),[i,s]=e.querySelectorAll("input");i.addEventListener("change",(()=>{n.forEach((t=>{t.expanded.value!=i.checked&&(t.expanded.value=i.checked)}))})),s?.addEventListener("change",(()=>{n.forEach((t=>{t.selectable.value&&t.selected.value!=s.checked&&(t.selected.value=s.checked)}))}));let l=z((()=>i.checked=n.every((t=>t.expanded.value)))),o=z((()=>{let t=n.filter((t=>t.selectable.value));s.checked=t.length&&t.every((t=>t.selected.value))}));for(let t of n)t.expanded.subscribe(e,l),s&&(t.selected.subscribe(e,o),t.selectable.subscribe(e,o));return l(),s&&o(),e}async function pt(t,e){let n=a(`<article class="variable view ${"single"!=e?e:""} ${t.isHarmonized?"harmonized":""}">\n\t\t<label class="expand-arrow icon">\n\t\t\t<input type="checkbox" hidden/>\n\t\t\t<img src="images/arrow-right.svg" data-inline/>\n\t\t\t<img src="images/arrow-down.svg" data-inline/>\n\t\t</label>\n\t\t<div class="border"></div>\n\t\t<span>${t.name}</span>\n\t</article>`),i=n.querySelector("input");return i.checked=t.expanded.value,i.addEventListener("change",(()=>t.expanded.value=i.checked)),t.expanded.subscribe(n,(()=>{i.checked=t.expanded.value,ot(n,i,t,e)})),"right"!=e&&n.querySelector(".border").after(function(t){let e=a('<label class="checkbox icon">\n\t\t<input type="checkbox" hidden/>\n\t\t<img src="images/check.svg"/>\n\t</label>'),n=e.querySelector("input");return n.checked=t.selected.value,n.disabled=!t.selectable.value,n.addEventListener("change",(()=>t.selected.value=n.checked)),t.selected.subscribe(e,(()=>n.checked=t.selected.value)),t.selectable.subscribe(e,(()=>n.disabled=!t.selectable.value)),e}(t)),"right"==e?n.append(await async function(t){let e=a('<article class="variable-status"></article>');return t.isHarmonized?e.innerHTML='<img width="24" height="24" src="images/check-circle.svg"/>':t.harmonReason?e.innerHTML=`<span class="lead left"><img src="images/lead.svg"/><span class="tooltip">${await P(t.harmonReason+"Reason")}</span></span><img src="images/check-yellow.svg"/>`:e.innerHTML='<img src="images/block.svg"/>',e}(t)):n.append(...await dt(t)),ot(n,i,t,e),n}function ht(){return a('<div class="border"></div>')}function mt(t,e,a){t.expanded.subscribe(a,(()=>{e.expanded.value!=t.expanded.value&&(e.expanded.value=t.expanded.value)}))}async function wt(){tt.variables().catch((async t=>{console.error(t),M(await P("loadFileError")),$.value="load"}));let t,e=a('<main class="main-content"></main>');if(tt.areDual){if(t=a('<section class="dual-container"></section>'),"string"==typeof S.value){let t=(await P("estimatedWeightSubtitle")).replace("$name",S.value);e.append(W(await P("estimatedWeightTitle"),t))}else if(S.value){let t=(await P("loadedFilesSubtitle")).replace("$nVars",(await tt.harmonized()).length);e.append(W(await P("loadedFilesTitle"),t))}}else t=a('<section class="dual-container single"></section>');return t.append(...await async function(){let t=[];return L.value?t.push(await G("left"),a('<div class="border"></div>'),await G("right")):t.push(await G("single")),t}()),t.append(...await async function(){let t=[];if(tt.areDual){t.push(await ut("left"),ht(),await ut("right"));let[e,a,n]=await Promise.all([tt.common(),tt.npOnly(),tt.pOnly()]),i=Math.max(a.length,n.length);for(let a of e)t.push(await pt(a,"left"),ht(),await pt(a,"right"));for(let e=0;e<i;e++){let i,s;a[e]&&(i=await pt(a[e],"left"),t.push(i)),t.push(ht()),n[e]&&(s=await pt(n[e],"right"),t.push(s)),a[e]&&n[e]&&(mt(a[e],n[e],i),mt(n[e],a[e],s))}}else{t.push(await ut("single"));let e=(await tt.variables()).map((t=>pt(t,"single")));t.push(...await Promise.all(e))}return t}()),e.append(t),D(e),S.value=!1,tt.subscribe(e,(async()=>e.replaceWith(await wt()))),e}const vt=c("inps",!0).then((()=>r("import inps",!0)));function bt(t,e){return e?`, ${t} = ${JSON.stringify(e)}`:""}class ft{constructor(){this.name=P("calibration"),this.title=P("Método de calibración"),this.description=P("calibrationDescription"),this.variables=tt.filtered((t=>t.selected.value&&t.hasTotals.value)),this.acceptsOrig=!0}async estimate(t,e,a){if(!e&&!a)throw this.errorMsg=P("calibrationMissing"),Error("Info missing");this.errorMsg=P("calibrationError");let n=new Map((await this.variables).map((t=>[t.name,t.getTotals()])));await async function(t,e,a,n,i){await Promise.all([u,vt]),await r(`\n\t\tfrom js import my_totals\n\t\ttemp_sample, temp_totals = utils.prepare_calibration(${e}, my_totals.to_py()${bt("weights_var",n)})\n\t`,!1,{my_totals:a});let s=`${bt("weights_column",n)}${bt("population_size",i)}`;await r(`${e}["${t}"] = inps.calibration_weights(temp_sample, temp_totals${s})`),await r("del temp_sample, temp_totals")}(t,"np_sample",n,a,e),E.event.dispatch()}}class gt{constructor(t,e){this.boosted=t,this.kernels=e;let a=e?"kw":"psa";t&&(a+="Boost"),this.name=P(a),this.title=P(a+"Title"),this.description=P(a+"Description"),this.errorMsg=P(a+"Error"),this.variables=tt.filtered((t=>t.selected.value&&t.isHarmonized)),this.acceptsOrig=!1}async estimate(t,e,a){let n=(await this.variables).map((t=>t.name));await async function(t,e,a,n,i,s,l,o){await vt;let c=`${bt("weights_column",n)}${bt("population_size",i)}${bt("covariates",s)}`;l&&(c+=", model = inps.boosting_classifier()");let d=o?"":'["np"]';return r(`${e}["${t}"] = inps.${o?"kw":"psa"}_weights(${e}, ${function(t,e){return e?`${t}.dropna(subset = "${e}")`:t}(a,n)}${c})${d}`)}(t,"np_sample","p_sample",k,e,n,this.boosted,this.kernels),E.event.dispatch()}}async function yt(t){let e=a(`<section class="vars-table">\n\t\t<article>${await P("activeVars")}</article>\n\t</section>`);for(let n of t)e.append(a(`<article>${n}</article>`));return e}function $t(t,e,a){t.forEach((t=>t.hidden=!a)),t[0].onchange=()=>e.forEach((e=>e.hidden=a&&!!t[0].value)),t[0].onchange()}async function St(){return(await tt.variables()).some((t=>t.selected.value))?async function(){let t=a(`<main class="main-content">\n\t\t<header>\n\t\t\t<h2>${await P("weightTitle")}</h2>\n\t\t\t<h3>${E.value}</h3>\n\t\t</header>\n\t\t<form class="weight-form">\n\t\t\t<section class="inputs">\n\t\t\t\t<label for="method">\n\t\t\t\t\t<span>${await P("method")}</span>\n\t\t\t\t\t<span class="lead">\n\t\t\t\t\t\t<img src="images/lead.svg"/>\n\t\t\t\t\t\t<span class="tooltip">\n\t\t\t\t\t\t\t<h4>${await P("methodTitle")}</h4>\n\t\t\t\t\t\t\t<p>${await P("methodDescription")}</p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<select id="method" required>\n\t\t\t\t\t<option value="" hidden>${await P("methodPlaceholder")}</option>\n\t\t\t\t</select>\n\t\t\t\t<article class="extra">\n\t\t\t\t\t<span>${await P("methodExplain")}</span>\n\t\t\t\t\t<span class="lead">\n\t\t\t\t\t\t<img src="images/lead.svg"/>\n\t\t\t\t\t\t<span class="tooltip">\n\t\t\t\t\t\t\t<h4>${await P("methodExplainTitle")}</h4>\n\t\t\t\t\t\t\t<p>${await P("methodExplainDescription")}</p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</article>\n\t\t\t\t<label for="orig-weights" hidden>\n\t\t\t\t\t<span>${await P("origWeights")}</span>\n\t\t\t\t\t<span class="lead">\n\t\t\t\t\t\t<img src="images/lead.svg"/>\n\t\t\t\t\t\t<span class="tooltip">\n\t\t\t\t\t\t\t<h4>${await P("origWeightsTitle")}</h4>\n\t\t\t\t\t\t\t<p>${await P("origWeightsDescription")}</p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<select id="orig-weights" hidden>\n\t\t\t\t\t<option value="">${await P("uniformWeights")}</option>\n\t\t\t\t</select>\n\t\t\t\t<label for="pop-size">\n\t\t\t\t\t<span>${await P("popSize")}</span>\n\t\t\t\t\t<span class="lead">\n\t\t\t\t\t\t<img src="images/lead.svg"/>\n\t\t\t\t\t\t<span class="tooltip">\n\t\t\t\t\t\t\t<h4>${await P("popSizeTitle")}</h4>\n\t\t\t\t\t\t\t<p>${await P("popSizeDescription")}</p>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<input id="pop-size" type="number" placeholder="${await P("popSizePlaceholder")}"/>\n\t\t\t</section>\n\t\t\t<section class="vars-table" hidden></section>\n\t\t\t<a hidden>${await P("changeVars")}</a>\n\t\t\t<section class="inputs single">\n\t\t\t\t<label for="new-var-name">${await P("newVar")}</label>\n\t\t\t\t<input id="new-var-name" type="text" placeholder="${await P("newVarPlaceholder")}" required/>\n\t\t\t</section>\n\t\t\t<button class="button" type="button">${await P("weightButton")}</button>\n\t\t</form>\n\t</main>`);function e(e){return t.querySelector(e)}const[n,i,s]=["#method",".extra h4",".extra p"].map(e),l=["#orig-weights",'[for="orig-weights"]'].map(e),o=["#pop-size",'[for="pop-size"]'].map(e),r=e(".vars-table + a"),c=e("#new-var-name"),d=e("button"),u=await q;l[0].append(...(await tt.filtered((t=>t.isNpNumeric))).map((t=>a(`<option>${t.name}</option>`)))),u&&(o[0].valueAsNumber=u),r.addEventListener("click",(()=>$.value="data")),d.onclick=()=>n.reportValidity();for(let e of[new ft,new gt,new gt(!0),new gt(!1,!0),new gt(!0,!0)]){let u=await e.variables;if(u.length){let[p,h,m]=await Promise.all([e.name,e.title,e.description]);n.append(a(`<option>${p}</option>`)),n.addEventListener("change",(async()=>{n.value==p&&(i.innerHTML=h,s.innerHTML=m,$t(l,o,e.acceptsOrig),t.querySelector(".vars-table").replaceWith(await yt(u.map((t=>t.name)))),r.hidden=!1,d.onclick=async()=>{if(c.reportValidity()&&(o[0].hidden||o[0].reportValidity())){let a=await F(await P("weightLoading"));t.append(a),a.showModal(),e.estimate(c.value,o[0].valueAsNumber,l[0].value).then((()=>{S.value=c.value,$.value="data"})).catch((async t=>{console.error(t),M(await e.errorMsg),a.remove()}))}})}))}}return n.dispatchEvent(new Event("change")),t}():async function(){return a(`<main class="main-content">\n\t\t<header>\n\t\t\t<h2>${await P("weightTitle")}</h2>\n\t\t\t<h3>${E.value}</h3>\n\t\t</header>\n\t\t<main class="empty-content">\n\t\t\t<p>${await P("emptyDescription")}</p>\n\t\t\t<img src="images/empty.svg"/>\n\t\t\t<span>${await P("emptyTitle")}</span>\n\t\t</main>\n\t</main>`)}()}let Et;async function Lt(){scrollTo(0,0);const t=Et=e();let a;if("load"==$.value)a=async function(){let t=await B();return t.querySelector("main").replaceWith(await X()),t}();else if("data"==$.value)a=async function(){let t=await B();return t.querySelector("main").replaceWith(await wt()),t}();else{if("weight"!=$.value)throw Error(`Invalid screen: ${$.value}`);a=async function(){let t=await B();return t.querySelector("main").replaceWith(await St()),t}()}a=await a,t==Et&&document.querySelector(".main-container > main").replaceWith(a)}$.addGlobalListener(Lt),Lt();
